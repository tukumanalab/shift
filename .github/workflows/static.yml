# Simple workflow for deploying static content to GitHub Pages
name: Deploy static content to Pages

on:
  # Runs on pushes targeting the default branch
  push:
    branches: ["main"]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# Sets permissions of the GITHUB_TOKEN to allow deployment to GitHub Pages
permissions:
  contents: read
  pages: write
  id-token: write

# Allow only one concurrent deployment, skipping runs queued between the run in-progress and latest queued.
# However, do NOT cancel in-progress runs as we want to allow these production deployments to complete.
concurrency:
  group: "pages"
  cancel-in-progress: false

jobs:
  # Single deploy job since we're just deploying
  deploy:
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      
      - name: Create config.js from secrets
        env:
          SHIFT_GOOGLE_APPS_SCRIPT_URL: ${{ secrets.SHIFT_GOOGLE_APPS_SCRIPT_URL }}
          SHIFT_GOOGLE_CLIENT_ID: ${{ secrets.SHIFT_GOOGLE_CLIENT_ID }}
          SHIFT_AUTHORIZED_EMAILS: ${{ vars.SHIFT_AUTHORIZED_EMAILS }}
        run: |
          echo "const config = {" > config.js
          echo "    GOOGLE_APPS_SCRIPT_URL: '${SHIFT_GOOGLE_APPS_SCRIPT_URL}'," >> config.js
          echo "    GOOGLE_CLIENT_ID: '${SHIFT_GOOGLE_CLIENT_ID}'," >> config.js
          echo "    AUTHORIZED_EMAILS: '${SHIFT_AUTHORIZED_EMAILS}'" >> config.js
          echo "};" >> config.js
      
      - name: Setup Pages
        uses: actions/configure-pages@v5
      
      - name: Upload artifact
        uses: actions/upload-pages-artifact@v3
        with:
          path: '.'
      
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4
